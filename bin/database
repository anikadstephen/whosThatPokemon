#!/bin/bash
# database

# Stop on errors
set -e
# set -o braceexpand

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

create() {
  
  if [ -f "./whosThatPokemon/var/pokemon.sqlite3" ]; then
    	echo "Error: database already exists"
		exit 1
	else	
		echo "+ mkdir -p ./whosThatPokemon/static/img/color_pokemon
+ mkdir -p ./whosThatPokemon/static/img/silhouette_pokemon
+ sqlite3 ./whosThatPokemon/var/pokemon.sqlite3 < ./whosThatPokemon/sql/scheme.sql"
		mkdir -p ./whosThatPokemon/static/img/color_pokemon
		mkdir -p ./whosThatPokemon/static/img/silhouette_pokemon
		sqlite3 ./whosThatPokemon/var/pokemon.sqlite3 < ./whosThatPokemon/sql/scheme.sql
		for c in {1..7}
		do  
			echo "+ python3 bin/scraper.py --generation $c
+ python3 bin/silhouette.py --generation $c
+ python3 bin/insert.py --generation $c"
   			python3 bin/scraper.py --generation $c
			python3 bin/silhouette.py --generation $c
			python3 bin/insert.py --generation $c
		done
	fi
}

destroy() {
	echo "+ rm -rf ./whosThatPokemon/static/img/color_pokemon 
+ rm -rf ./whosThatPokemon/static/img/silhouette_pokemon
+ rm -rf ./whosThatPokemon/var/pokemon.sqlite3"
    rm -rf ./whosThatPokemon/static/img/color_pokemon 
	rm -rf ./whosThatPokemon/static/img/silhouette_pokemon
    rm -rf ./whosThatPokemon/var/pokemon.sqlite3
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
	create
	;;

  "destroy")
	destroy
    ;;

  "reset")
	destroy
	create
    ;;

  "dump")
	sqlite3 -batch -line whosThatPokemon/var/pokemon.sqlite3 'SELECT * FROM pokemon'
    ;;

  *)
    usage
    exit 1
    ;;
esac